/*
    观察者模式：定义了对象间一对多的依赖关系，让多个观察者对象同时
    监听某一个主题对象（被观察者）。当主题对象的状态发生变化时，会
    通知观察者对象，让它们能自动更新

    应用背景：当应用程序的某一部分更新时，同时需要更新其它部分的应用程序，
    于是就形成一种依赖关系。可以使用的方法：让被改变者反复检查改变者是否
    发生改变。但是这种方法有很大的问题：
        1. 占用大量的CPU资源去查询
        2. 依赖于检测时间的更新间隔，可能不会立即获取

    
*/   
